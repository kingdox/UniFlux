@startuml
abstract class "KeyFlux`1"<T> {
    KeyT : T <<get>>
    + <<sealed>> <<override>> Store(callback:Action, condition:bool) : void
    + <<sealed>> <<override>> Dispatch() : void
    + <<sealed>> <<override>> Store(callback:Action<T2>, condition:bool) : void
    + <<sealed>> <<override>> Dispatch(@param:T2) : void
    + <<sealed>> <<override>> Store(callback:Func<T2>, condition:bool) : void
    + <<sealed>> <<override>> Dispatch() : T2
    + <<sealed>> <<override>> Store(callback:Func<T2, T3>, condition:bool) : void
    + <<sealed>> <<override>> Dispatch(@param:T2) : T3
    + <<sealed>> <<override>> StoreState(callback:Action<T2>, condition:bool) : void
    + <<sealed>> <<override>> DispatchState(@param:T2) : void
}
class "IKeyFlux`1"<T> {
}
KeyFluxBase <|-- "KeyFlux`1"
"IKeyFlux`1" "<T>" <|-- "KeyFlux`1"
@enduml
